<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="ethoca">
    <property environment="env"/>
    <property name="ECLIPSE_HOME" value="D:/eclipse/"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    <path id="TestNG.libraryclasspath">
        <pathelement location="${ECLIPSE_HOME}plugins/org.testng_6.14.2.r201802161450.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/com.beust.jcommander_1.72.0.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.apache-extras.beanshell.bsh_2.0.0.b6.jar"/>
        <pathelement location="${ECLIPSE_HOME}plugins/org.yaml.snakeyaml_1.17.0.jar"/>
    </path>
    <path id="Maven Dependencies.libraryclasspath"/>
    <path id="ethoca.classpath">
        <pathelement location="target/classes"/>
        <pathelement location="D:/SelenuimUdemy/client-combined-3.7.0.jar"/>
        <pathelement location="D:/SelenuimUdemy/client-combined-3.7.0-sources.jar"/>
        <pathelement location="D:/SelenuimUdemy/selenium-server-standalone-3.7.0.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/byte-buddy-1.7.5.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/commons-codec-1.10.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/commons-exec-1.3.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/commons-logging-1.2.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/gson-2.8.2.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/guava-23.0.jar"/>
        <pathelement location="D:/SelenuimUdemy/libs/httpclient-4.5.3.jar"/>
        <path refid="TestNG.libraryclasspath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
        <pathelement location="../../Users/sid/Desktop/guice-3.0.jar"/>
        <pathelement location="../../Users/sid/Desktop/reportng-1.1.4.jar"/>
        <pathelement location="../../Users/sid/Desktop/velocity-dep-1.4.jar"/>
        <pathelement location="../../Users/sid/Desktop/junit-4.10.jar"/>
    </path>
    <path id="run.TestClass.classpath">
        <path refid="ethoca.classpath"/>
        <path refid="Maven Dependencies.libraryclasspath"/>
    </path>
    <target name="init">
        <mkdir dir="target/classes"/>
        <copy includeemptydirs="false" todir="target/classes">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="target/classes"/>
    </target>
    <target depends="clean" name="cleanall"/>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects"/>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="target/classes" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="ethoca.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="TestClass">
        <java classname="AutomationFramework.TestClass" failonerror="true" fork="yes">
            <classpath refid="run.TestClass.classpath"/>
        </java>
    </target>
              	<target name="war" description="Bundles the application as a WAR file" depends="clean, build">
              	    <mkdir dir="WebContent/WEB-INF/classes"/>
              	     
              	    <copy includeemptydirs="false" todir="WebContent/WEB-INF/classes">
              	            <fileset dir="build/classes">
              	            <include name="**/*.class"/>
              	            </fileset>
              	    </copy>
              	     
              	    <war destfile="UploadServlet30.war"
              	        basedir="WebContent"
              	        needxmlfile="false">
              	    </war>
              	</target> 
</project>
